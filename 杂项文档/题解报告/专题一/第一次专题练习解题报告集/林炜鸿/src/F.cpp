#pragma comment(linker, "/STACK:102400000,102400000")
#include <cstdio>
#include <iostream>
#include <cstdlib>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <map>
#include <set>
#include <queue>
using namespace std;
typedef pair<int,int> Pii;
typedef long long LL;
typedef unsigned long long ULL;
typedef double DBL;
typedef long double LDBL;
#define MST(a,b) memset(a,b,sizeof(a))
#define CLR(a) MST(a,0)
#define Sqr(a) (a*a)

//int N;
//int ans[1010]={1,0,1,2,2,3,3,4,3,4,4,5,4,5,5,5,4,5,5,6,5,6,6,6,5,6,6,6,6,7,6,6,5,6,6,7,6,7,7,7,6,7,7,7,7,7,7,7,6,7,7,7,7,8,7,8,7,8,8,8,7,8,7,7,6,7,7,8,7,8,8,8,7,8,8,8,8,8,8,8,7,8,8,8,8,8,8,9,8,9,8,9,8,8,8,8,7,8,8,8,8,9,8,9,8,9,9,9,8,9,9,9,8,9,9,9,9,9,9,9,8,9,9,9,8,9,8,8,7,8,8,9,8,9,9,9,8,9,9,10,9,9,9,9,8,9,9,9,9,9,9,10,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,10,9,10,9,10,9,10,10,10,9,10,10,10,9,10,10,10,9,10,9,10,9,9,9,9,8,9,9,9,9,10,9,10,9,10,10,10,9,10,10,10,9,10,10,10,10,10,10,10,9,10,10,10,10,10,10,10,9,10,10,10,10,11,10,10,10,11,10,10,10,10,10,10,9,10,10,10,10,10,10,10,9,10,10,10,9,10,9,9,8,9,9,10,9,10,10,10,9,10,10,11,10,11,10,10,9,10,10,11,10,11,11,10,10,10,10,10,10,10,10,10,9,10,10,10,10,11,10,11,10,10,10,11,10,11,11,11,10,11,10,11,10,11,10,11,10,11,10,10,10,10,10,10,9,10,10,10,10,10,10,11,10,11,10,11,10,11,11,11,10,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,10,11,10,11,10,10,10,10,9,10,10,10,10,11,10,11,10,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,10,11,11,11,11,12,11,11,11,12,12,11,11,12,11,12,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,12,11,11,11,12,11,12,11,11,10,11,11,12,11,12,11,11,10,11,11,11,10,11,10,10,9,10,10,11,10,11,11,11,10,11,11,12,11,12,11,11,10,11,11,12,11,12,12,11,11,12,12,12,11,12,11,11,10,11,11,12,11,12,12,12,11,12,12,12,12,12,11,12,11,11,11,12,11,12,11,11,11,12,11,12,11,11,11,11,10,11,11,11,11,11,11,12,11,11,12,12,11,12,12,12,11,12,11,12,11,12,12,12,11,12,12,12,12,12,12,12,11,12,12,12,11,12,12,12,11,12,12,12,11,12,12,12,11,12,12,12,11,12,11,12,11,12,11,11,11,11,11,11,10,11,11,11,11,11,11,12,11,12,11,12,11,12,12,12,11,12,12,12,11,12,12,12,11,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,11,12,12,12,12,12,12,13,12,12,12,13,12,12,12,12,11,12,12,12,12,13,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,11,12,12,12,11,12,12,12,11,12,11,12,11,11,11,11,10,11,11,11,11,12,11,12,11,12,12,12,11,12,12,12,11,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,11,12,12,12,12,13,12,13,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,13,12,12,12,12,12,13,12,12,12,13,12,13,12,12,12,13,12,13,12,12,12,12,11,12,12,12,12,13,12,13,12,12,12,13,12,13,13,13,12,13,12,13,12,13,13,13,12,12,12,12,12,12,12,12,11,12,12,12,12,13,12,12,12,13,13,13,12,13,12,13,12,13,13,13,13,13,12,13,12,13,13,13,12,13,13,13,12,13,12,13,13,13,13,13,12,13,13,13,12,13,12,13,12,12,12,13,12,13,12,12,12,13,12,12,12,12,12,12,11,12,12,12,12,12,12,13,12,12,12,13,12,13,13,12,12,12,12,13,12,13,13,13,12,13,13,13,12,13,12,12,11,12,12,13,12,13,13,13,12};
//int main()
//{
//	int T;
//	scanf("%d", &T);
//	for(int ck=1; ck<=T; ck++)
//	{
//		scanf("%d", &N);
//		printf("%d\n", ans[N]);
//	}
//}

const int maxn=1000+10,Lim=16;
const int INF=0x3f3f3f3f;
int N;
int tem[maxn];
int ans[maxn][Lim];
set<int> vis;

int dfs(int);LL ntime;

int main()
{
	MST(ans,0x3f);
	vis.insert(0);
	vis.insert(1);
	ans[0][0]=1;ans[1][0]=0;
	tem[0]=1;
	dfs(1);
	printf("%d\n", ans[953][0]);
//	puts("done");
	freopen("out.txt", "w", stdout);
	printf("int ans[1010]={");
	for(int i=0; i<1000; i++) printf("%d,", ans[i]);
	printf("%d}", ans[1000]);
//	int T;
//	scanf("%d", &T);
//	for(int ck=1; ck<=T; ck++)
//	{
//		scanf("%d", &N);
//	}
//	return 0;
}

int dfs(int np)
{
//	printf("%d\n", np);
//	for(int i=0; i<np; i++) printf("%d ", tem[i]);
//	system("pause");
	ntime++;
//	if(ntime%12216==0)printf("%lld\n", ntime);
	if(np>=Lim) return 0;
	int now;
	for(int i=np-1; i>=0; i--)
	{
		for(int j=np-1; j>=i; j--)
		{
			now=tem[i]+tem[j];

//			if(ans[now][np]<=np) continue;
			if(now<maxn)
			{
				ans[now][np]=np;
				ans[now][0]=min(ans[now][0], np);
			}

			if(vis.find(now)!=vis.end()) continue;
			tem[np]=now;
			vis.insert(now);
			dfs(np+1);
			vis.erase(now);
		}
		for(int j=np-1; j>=0; j--)
		{
			now=abs(tem[i]-tem[j]);
			
//			if(ans[now][np]<=np) continue;
			if(now<maxn)
			{
				ans[now][np]=np;
				ans[now][0]=min(ans[now][0], np);
			}
			
			if(vis.find(now)!=vis.end()) continue;
			tem[np]=now;
			vis.insert(now);
			dfs(np+1);
			vis.erase(now);
		}
	}
	return 0;
}
